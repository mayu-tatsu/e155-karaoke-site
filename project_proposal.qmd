---
title: "Project Proposal"

tbl-cap-location: bottom
---

## Project Overview
This project seeks to emulate a karaoke machine by allowing a user to select from a set list of songs and displaying appropriately-timed lyrics accordingly. Once the song has finished, the project will grade the user's performance — with both a numeric score and letter grade — based on how on-pitch they are.

To be more specific, this will be done by sampling the user's singing with the FPGA and a microphone, during which the former will perform decimation (see the [New FPGA Functionality](#sec-new-fpga-functionality) section below for more details on this).
Then, the FPGA will send this processed information to the MCU via SPI communication, so that it can further process such with FFT computations.
Finally, the MCU will communicate with an LCD over I2C to display the corresponding lyrics of whatever song the user has chosen to sing.


## Specifications
* Design allows the user to choose a song through external hardware
* Design detects input notes between A3 and roughly B5 (220 Hz to 1000 Hz)
* Design scores the user’s singing by comparing detected and expected notes
* Displays properly-timed lyrics/notes on an LCD screen
* LCD display does not flicker


## Project Management
### Bill of Materials
| **Part Name**                         | **Part Number**                                                                                   | **Quantity** | **Price**                                                   | **Vendor**                                                  |
|:-------------------------------------:|:-------------------------------------------------------------------------------------------------:|:------------:|:-----------------------------------------------------------:|:-----------------------------------------------------------:|
| Adafruit PDM MEMS Microphone Breakout | [MP34DT01-M](https://www.st.com/en/audio-ics/mp34dt01-m.html)                                     | 1            | $11.23 *($4.95 part, $6.28 shipping + tax)*                 | [Adafruit](https://www.adafruit.com/product/3492)           |
| Hosyond I2C 2004 LCD Module           | [HD44780U](https://dfimg.dfrobot.com/enshop/image/data/DFR0154/LCD2004%20hd44780%20Datasheet.pdf) | 1            | $26.32 *($16.99 part, $6.99 shipping, $2.34 estimated tax)* | [Amazon](https://www.amazon.com/gp/product/B0C1G9GBRZ?th=1) |
| Capacitor                             | 100nF Ceramic Capacitor                                                                           | 1            | $0                                                          | Stockroom                                                   |
| **TOTAL**                             |                                                                                                   |              | $37.55                                                      |                                                             |
: Bill of materials {#tbl-bom}

Note that if the team discovers that they need any additional, basic resources (such as resistors, capacitors, etc.) later on in the project, these will be taken from either the Engineering Stockroom or Digital Lab at no cost.

### Timeline
|                            | **Task(s)**                                       | **Date** |
|:--------------------------:|:-------------------------------------------------:|:--------:|
| *Project proposal*         | Finish project proposal                           | 10/16/25 |
|                            | Start project                                     | 10/30/25 |
|                            | Study PDM to PCM decimation                       | 11/6/25  |
| *Design review*            | Prepare slides for design review                  | 11/7/25  |
|                            | Implement new decimation FPGA functionality       | 11/13/25 |
| *Midpoint report and demo* | Finish midpoint report and prepare demo           | 11/16/25 |
|                            | Detect all input notes accurately with microphone | 11/20/25 |
|                            | Synchronize LCD output notes/lyrics with song(s)  | 11/27/25 |
|                            | Polish off project's final appearance             | 12/3/25  |
| *Final checkoff*           | Finish project completely                         | 12/5/25  |
| *Final report*             | Finish final report                               | 12/7/25  |
| *Demo day*                 |                                                   | 12/8/25  |
: Rough timeline with key dates {#tbl-timeline}

### Task Delegation
+-------------------------------------------+-------------------------------------------+
| **Mayu**                                  | **Quinn**                                 |
+:==========================================+:==========================================+
| - Study PDM to PCM decimation             | - Study PDM to PCM decimation             |
+-------------------------------------------+-------------------------------------------+
| - Start FPGA code                         | - Start LCD code                          |
|                                           | - Transcribe song(s)                      |
+-------------------------------------------+-------------------------------------------+
| - Check LCD code                          | - Check FPGA code                         |
+-------------------------------------------+-------------------------------------------+
| - Study FFT calculations and libraries    | - Study FFT calculations and libraries    |
+-------------------------------------------+-------------------------------------------+
| - Decide on interrupts and timers for MCU | - Decide on interrupts and timers for MCU |
+-------------------------------------------+-------------------------------------------+
| - Assemble circuit                        | - Check circuit                           |
+-------------------------------------------+-------------------------------------------+
| - Write verification                      | - Write verification                      |
+-------------------------------------------+-------------------------------------------+
| - Write Documentation                     | - Write Documentation                     |
+-------------------------------------------+-------------------------------------------+
: Task delegation {#tbl-task-delegation}

Overall, the team hopes to complete the vast majority of the project's tasks together, so as to receive an equal and holistic learning experience.


## Design Details
### New MCU Functionality
The new MCU functionality intended to be used is the I2C interface peripheral, which will enable communication with the LCD.

### New FPGA Functionality {#sec-new-fpga-functionality}
The new FPGA functionality intended to be used is decimation.
In short, decimation is a term in (digital) signal processing that describes the removal of samples so as to reduce the complexity of subsequent computations.

### New Non-Trivial Hardware
The two new, non-trivial pieces of hardware that will be used in this project are the Hoysond LCD module and the Adafruit PDM microphone.

### Riskiest Element
The riskiest element of the project will likely be integrating the aforementioned PDM to PCM decimation on the FPGA, which involves CIC and FIR filters; at the moment, the team does not know anything about this, nor how to implement it, so it is hard to assess both the amount and difficulty of the workload before actually diving into it.
It requires a decent amount of math and selectivity for it to function for the team's purposes, which they will be learning along the way. 
The team will attempt to mitigate these risks by utilizing reference designs and validating incrementally on the FPGA.


## Technical Documentation
### Block Diagram
![Block diagram](images/project_proposal_block_diagram.jpg){#fig-block-diagram}

The block diagram depicted in [Figure 1](#fig-block-diagram) provides a general outline of all protocols and interfaces that the project will comprise.

### Calculations of Critical Parameters

#### PDM to PCM Decimation Parameters
Given values from [MP34DT01-M Datasheet](https://cdn-learn.adafruit.com/assets/assets/000/049/977/original/MP34DT01-M.pdf) pg. 4:

**Clock** (@ $Vdd=1.8V$, $T=25\degree C$) = 2.4 MHz (Min. 1 MHz, Max. 3.25 MHz)  
**AOP** (Acoustic Overload Point) = 120 dBSPL  
**SNR** (Signal-to-Noise Ratio) = 61 dB  
**Dynamic Range** = SNR + (AOP - 94 dbSPL) = 61 dB + (120 dbSPL - 94 dbSPL) = 87bB  
- Assuming basically ~6dB per bit (realistically 6.2 per bit but rounding down), our design will need a **PCM word size** of at least **15 bits** to cover the full dynamic range of the microphone. ($87/6=14.5$, round up to 15 bits)

Values decided upon:

**Output Sample Rate**: 16 kHz → **Bandwidth / Nyquist**: 8 kHz  
- Most fundamental frequencies and harmonics of human singing fall below 8 kHz, and the Nyquist at 16 kHz comfortably covers this band.
- Lower processing and memory cost compared to standard 48 kHz audio.  
- FFT frequency bins and time resolution are balanced at this sample rate for pitch detection and scoring (see below!).  
**PDM Sample Rate**: 2.304 MHz  
- Based on Clock range: 1 - 3.25 MHz  
- Power of 2: Important for decimation ratio --> multi-stage decimation.  
**Decimation Ratio**: $2304 kHz / 16 kHz = 144$  

![Frequency Response Diagram](images/mic-freq-response.png){#fig-freq-response width=70%}

Observing [Figure 2](#fig-freq-response), after 6 kHz, the frequency response starts becoming a lot more sensitive. Pass until then, and then start the transition band there. Beyond 10 kHz, the frequency response data isn't displayed, so assuming the worst, the stop band should start from there. 

**Pass-band**: 0 - 6 kHz  
**Stop Band**: 10 kHz  
**SNR of Output Signal**: 80 dB  
- Humans can’t tell beyond 70 dB  
- Allowing for increased SNR deterioration (of around 7 dB from 87 dB), we can balance out the computational usage to quality required for a karaoke machine.  
**Max. Ripple**: +/- 1dB  
- Individual filters will need to have tighter specs than this overall maximum 1 dB ripple, so for less load, it’s relaxed compared to the high quality audio standard of 0.1 dB.  
**Stop Band Attenuation** = 60 dB  
- Worst-case assumption: PDM noise above 8 kHz (Nyquist) = −40 dB per 16 kHz band.

```default
# all Hz
fPDM      = 2.304e6
fPDM/2    = 1.152e6
fs        = 16e3
fs/2      = 8e3

N_bands   = floor((1.152e6 - 8e3)/16e3) = 71

SNR_before   = 87   # dB
SNR_after    = 80   # dB
decimation_r = fPDM / fs = 144

P_signal                      = 1                           # normalized signal power
P_native_noise_before         = 10^(-87/10) = 1.9953e-9     # intrinsic mic noise power
P_total_noise_allowed         = 10^(-80/10) = 1.0000e-8     # total noise after filtering
P_aliasing_noise_allowed      = P_total_noise_allowed - P_native_noise_before
                              = 8.0047e-9   # max allowed aliased noise after filtering

# per-band assumption: -40 dB  (per 16-kHz band above 8 kHz)
P_aliasing_noise_before_per_band = 10^(-40/10) = 0.0001
P_aliasing_noise_before_total    = 0.P_aliasing_noise_before_per_band * N_bands = 0.0071

A_stop_lin = 0.0071 / 8.0047e-9 = 8.873e5
A_stop_db  = 10 * log10(A_stop_lin) = 59.5               # ~60 dB stop-band attenuation required 

```


##### LUT Usage

Preliminary calculations based on this blog, to be tweaked later: [Design of a Multi-Stage PDM to PCM Decimation Pipeline](https://tomverbeure.github.io/2020/12/20/Design-of-a-Multi-Stage-PDM-to-PCM-Decimation-Pipeline.html)

Following the 144 decimation ratio, CIC can handle max 12x decimation (bulk of decimation) with 4 stages and has 0.056 dB passband ripple and 125.8 dB stopband attenuation. Use 2 cascaded half-band filters: HB1 with 4x decimation, HB2 3x. Each roughly has ~0.02 dB passband ripple and 89 dB attenuation. At the end, a generic FIR filter minimizes ripple by having a flat passband that counteracts the CIC passband droop (“compensation filter”). It also enforces stopband attenuation to a value higher than 60 dB (already achieved!), and as with the role of an FIR filter has 1x decimation.


* iCE40UP: 5280 LUTs available
* CIC Filter (12x in 4 stages): 
* Half-Band Filters:
    + HB1: 4x
    + HB2: 3x
* FIR Filter:


#### FFT Parameters

Sample Rate (from FPGA’s decimation) [$f_S$]: 16 kHz  
FFT Size [$N$]: 2048; balanced choice from [Table 4](#tbl-fft-sizes) below

Frequency resolution per FFT bin: 

* $f_S / N$ = Sample Rate / FFT Size
* Aiming for a range between 5-20 Hz/bin for musical range

Time resolution / Frame duration:

* $N / f_S$ = FFT Size / Sample Rate
* 50-100 ms latency is slowest without human notification


| **FFT Size**        | **Frequency Resolution**     | **Time Resolution**            |
|:-------------------:|:----------------------------:|:------------------------------:|
| 1024                | 15.625 Hz/bin                | 0.064 s = 64 ms                |
| [2048]{.underline}  | [7.8125 Hz/bin]{.underline}  | [0.128 s = 128 ms]{.underline} |
| 4096                | 3.90625 Hz/bin               | 0.256 s = 256 ms               |
: FFT Size Options {#tbl-fft-sizes}